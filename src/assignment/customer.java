/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */




public class customer extends javax.swing.JFrame {
    
    /**
     * Creates new form customer
     */
    public customer() {
        initComponents();
        jLabel8.setVisible(false);
        jLabel9.setVisible(false);
        jLabel10.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        customerName = new javax.swing.JTextField();
        customerIc = new javax.swing.JTextField();
        customerEmail = new javax.swing.JTextField();
        customerContact = new javax.swing.JTextField();
        customerAdd = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        customerDelete = new javax.swing.JTextField();
        customerDeletebtn = new javax.swing.JButton();
        customerReset = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        customerGender = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        customerSearch = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Customer");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 28, -1, -1));

        String[] COLUMN_NAMES = {"Name", "IC", "Gender", "Email", "Contact", "Date"};
        DefaultTableModel model = new DefaultTableModel(COLUMN_NAMES, 0);
        customerTable.setModel(model);

        // Open the Customer.txt file as a RandomAccessFile for reading
        try (RandomAccessFile raf = new RandomAccessFile(new File("Customer.txt"), "r")) {
            // Read each line from the file and add it as a row to the table model
            String line;
            while ((line = raf.readLine()) != null) {
                String[] data = new String[7];
                data[0] = line.substring(11); // Customer Name
                line = raf.readLine();
                data[1] = line.substring(13); // Customer IC
                line = raf.readLine();
                data[2] = line.substring(8); // Customer Gender
                line = raf.readLine();
                data[3] = line.substring(7); // Customer Email
                line = raf.readLine();
                data[4] = line.substring(9); // Customer Contact
                line = raf.readLine();
                data[5] = line.substring(15); // Customer Date
                line = raf.readLine();

                model.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        jScrollPane1.setViewportView(customerTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 100, 594, 383));

        jLabel2.setText("Full Name: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 103, -1, -1));

        jLabel3.setText("IC / Passport: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 167, -1, -1));

        jLabel4.setText("Email: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 285, 37, -1));

        jLabel5.setText("Contact Number: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 357, -1, -1));
        getContentPane().add(customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 100, 223, -1));
        getContentPane().add(customerIc, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 164, 223, -1));
        getContentPane().add(customerEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 282, 223, -1));
        getContentPane().add(customerContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 354, 223, -1));

        customerAdd.setText("Add");
        customerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerAddActionPerformed(evt);
            }
        });
        getContentPane().add(customerAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 418, -1, -1));

        jLabel6.setText("IC / Passport:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 464, -1, -1));
        getContentPane().add(customerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 461, 223, -1));

        customerDeletebtn.setText("Delete");
        customerDeletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerDeletebtnActionPerformed(evt);
            }
        });
        getContentPane().add(customerDeletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 520, -1, -1));

        customerReset.setText("Reset");
        customerReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerResetActionPerformed(evt);
            }
        });
        getContentPane().add(customerReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 418, -1, -1));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 31, -1, -1));

        jLabel7.setText("Gender:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 220, -1, -1));

        customerGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female" }));
        getContentPane().add(customerGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 216, 224, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Name must be lower & uppercase without integer or special character!");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 129, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Invalid IC or Passport number! (must contain -)");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 187, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("Can't be leave blanked!");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 247, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setText("Invalid Email!");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 311, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 51));
        jLabel12.setText("Invalid Contact Number!");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 383, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 51));
        jLabel13.setText("No records found!");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 496, -1, -1));

        customerSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchActionPerformed(evt);
            }
        });
        customerSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerSearchKeyReleased(evt);
            }
        });
        getContentPane().add(customerSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(667, 65, 474, -1));

        jLabel14.setText("Search Customer:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(566, 68, 96, -1));
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 580, -1, -1));
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 530, 40, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customerDeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerDeletebtnActionPerformed
        try {
            //deleting customer data by getting ic number (matched data get deleted)
            String deleteinfo = customerDelete.getText();
            String customername, customeric, customergender, customeremail, customercontact, customerdate, customerspace;
            RandomAccessFile raf = new RandomAccessFile("Customer.txt", "rw");
            for(int i=1; i < countlines() ; i++){
                
                customername = raf.readLine().substring(11);
                customeric = raf.readLine().substring(13);
                customergender = raf.readLine().substring(8);
                customeremail = raf.readLine().substring(7);
                customercontact =raf.readLine().substring(9);
                customerdate = raf.readLine().substring(15);
                customerspace =raf.readLine().substring(0);
                
                if (customeric.equals(deleteinfo)){
                    
                    jLabel13.setVisible(false);
                    int n = JOptionPane.showConfirmDialog(null,"Would you like to delete "+ customername + " ?", "Terminate System", JOptionPane.YES_NO_OPTION);
                    if(n==JOptionPane.YES_OPTION){
                        client obj1 = new client(deleteinfo);
                        String res = obj1.deletecustomer();
                        if (res == "Success"){
                            JOptionPane.showMessageDialog(null,"Record deleted!.","Success",JOptionPane.INFORMATION_MESSAGE);
                            continue;
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Record failed to delete!.","Fail",JOptionPane.INFORMATION_MESSAGE);
                            continue;
                        }
                   } else if (n==JOptionPane.NO_OPTION){
                       JOptionPane.showMessageDialog(null,"Action Terminated!.","Terminate",JOptionPane.INFORMATION_MESSAGE);
                       break;
                   }
                }  else{
                     continue;
                }
            }
            
            jLabel13.setVisible(true);

            

            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_customerDeletebtnActionPerformed

    private void customerResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerResetActionPerformed
        //resetting values
        customerName.setText("");
        customerIc.setText("");
        customerGender.setSelectedIndex(0);
        customerEmail.setText("");
        customerContact.setText("");

    }//GEN-LAST:event_customerResetActionPerformed
    //iterations count in the customer.txt file
    static int countlines() throws FileNotFoundException{
            File file = new File("Customer.txt");
            Scanner scanner = new Scanner(file);
            int count = 0;
            int line = 0;
            
            while (scanner.hasNextLine()) {
                scanner.nextLine();
                count++;
            }
            scanner.close();
            
            return count/7+1;
                   
    }
    
    private void customerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerAddActionPerformed
        try {
            //registering the customer
            boolean isName = false, isIc = false, isGender = false, isEmail = false, isContact = false, checkIc = false;
            String name, ic, gender, email, contact, date;
            String customername, customeric, customergender, customeremail, customercontact, customerdate, customerspace;
            
            name = customerName.getText();
            ic = customerIc.getText();
            gender = String.valueOf(customerGender.getSelectedItem());
            email = customerEmail.getText();
            contact = customerContact.getText();
            
            RandomAccessFile raf = new RandomAccessFile("Customer.txt", "rw");
            for(int i=1; i < countlines() ; i++){
                
                customername = raf.readLine().substring(11);
                customeric = raf.readLine().substring(13);
                customergender = raf.readLine().substring(8);
                customeremail = raf.readLine().substring(7);
                customercontact =raf.readLine().substring(9);
                customerdate = raf.readLine().substring(15);
                customerspace =raf.readLine().substring(0);
                
                //check whether ic / passport field have duplicated data
                if(customeric.equals(ic)){
                    JOptionPane.showMessageDialog(null,"IC or Passport duplicated!","Error",JOptionPane.INFORMATION_MESSAGE);
                    customerIc.setText("");
                } else {
                    checkIc = true;
                }
                  
            }
            
            //name validation
            String pattern = ".*[!@#$%^&*()\\-_=+\\[\\]{};:\'\"<>,./?\\\\|`~].*";
            if (name.length() < 2 || name.isEmpty()){
                jLabel8.setVisible(true);
            } else if (name.matches(".*\\d+.*")|| name.matches(pattern)){
                jLabel8.setVisible(true);
            }else if (!name.matches(".*[A-Z].*") || !name.matches(".*[a-z].*")){
                jLabel8.setVisible(true);
            } else{
                isName = true;
                jLabel8.setVisible(false);
            }
            
            //ic validation
            if (ic.matches("^\\w{1}\\d{8}$") || ic.matches("^\\w{2}\\d{8}$") || (ic.matches("^\\d{6}-\\d{2}-\\d{4}$"))){
                jLabel9.setVisible(false);
                isIc = true;
            } else{
                jLabel9.setVisible(true);
            }
            
            //check combo box is selected
            if (String.valueOf(customerGender.getSelectedItem()).equals("None")){
                jLabel10.setVisible(true);
            } else{
                isGender = true;
                jLabel10.setVisible(false);
            }
            
            //email validation
            if ((email == null || email.isEmpty())){
                jLabel11.setVisible(true);
            } else if (!email.contains("@") || (!email.contains(".com"))){
                jLabel11.setVisible(true);
            } else{
                isEmail = true;
                jLabel11.setVisible(false);
            }
            
            //contact number validation
            if (contact.matches("^[0-9]\\d{0,15}$")) {
                jLabel12.setVisible(false);
                isContact = true;
            } else {
                jLabel12.setVisible(true);
            }   
            
            //get current date
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            Date currentDate = new Date();
            date = formatter.format(currentDate);
            
            //if all fulfill validation, write all data into file
            if(isName && isIc && isGender && isEmail && isContact && checkIc){
                client obj1 = new client(name, ic, gender, email, contact, date);
                
                String res  = obj1.registercustomer();
                if (res == "Success"){
                    JOptionPane.showMessageDialog(null,"Registration completed.","Success",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Please try again! Something happened","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
        }
      
       
    }//GEN-LAST:event_customerAddActionPerformed

    private void customerSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerSearchKeyReleased
        //filtering data for the customer jtable
        DefaultTableModel obj = (DefaultTableModel) customerTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        customerTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(customerSearch.getText()));
    }//GEN-LAST:event_customerSearchKeyReleased

    private void customerSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerSearchActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
            menu a = new menu();
            a.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */ 
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customer().setVisible(true);
            }
        });
    }
    
    public void settable(){
        
        //reset the value in the customer table
        String[] COLUMN_NAMES = {"Name", "IC", "Gender", "Email", "Contact", "Date"};
        DefaultTableModel model = new DefaultTableModel(COLUMN_NAMES, 0);
        customerTable.setModel(model);

        // Open the Customer.txt file as a RandomAccessFile for reading
        try (RandomAccessFile raf = new RandomAccessFile(new File("Customer.txt"), "r")) {
            // Read each line from the file and add it as a row to the table model
            String line;
            while ((line = raf.readLine()) != null) {
                String[] data = new String[7];
                data[0] = line.substring(11); // Customer Name
                line = raf.readLine();
                data[1] = line.substring(13); // Customer IC
                line = raf.readLine();
                data[2] = line.substring(8); // Customer Gender
                line = raf.readLine();
                data[3] = line.substring(7); // Customer Email
                line = raf.readLine();
                data[4] = line.substring(9); // Customer Contact
                line = raf.readLine();
                data[5] = line.substring(15); // Customer Date
                line = raf.readLine();

                model.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton customerAdd;
    private javax.swing.JTextField customerContact;
    private javax.swing.JTextField customerDelete;
    private javax.swing.JButton customerDeletebtn;
    private javax.swing.JTextField customerEmail;
    private javax.swing.JComboBox<String> customerGender;
    private javax.swing.JTextField customerIc;
    private javax.swing.JTextField customerName;
    private javax.swing.JButton customerReset;
    private javax.swing.JTextField customerSearch;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
